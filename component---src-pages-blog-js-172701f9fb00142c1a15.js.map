{"version":3,"sources":["webpack:///./src/pages/blog.js"],"names":["Content","ArticleDate","WordBlog","MarkerHeader","ReadingTime","IndexPage","data","title","allMarkdownRemark","edges","filter","rawDate","node","frontmatter","Date","map","key","id","to","path","css","date","fields","readingTime","text","excerpt"],"mappings":"8KAQMA,EAAO,6IAOPC,EAAW,8FAKXC,EAAQ,+EAIRC,EAAY,sPAeZC,EAAW,8FAGhB,+DAqCcC,UAnCG,SAAH,GAAkB,IAAZC,EAAI,EAAJA,KACnB,OACE,YAAC,IAAM,KACL,YAAC,IAAG,CAACC,MAAM,SACX,YAACP,EAAO,KACN,YAACE,EAAQ,aACRI,EAAKE,kBAAkBC,MACrBC,QAAO,YAAe,IACfC,EADO,EAAJC,KACYC,YAAYF,QAEjC,OADa,IAAIG,KAAKH,GACR,IAAIG,QAEnBC,KAAI,gBAAGH,EAAI,EAAJA,KAAI,OACV,mBAAKI,IAAKJ,EAAKK,IACb,YAAC,OAAI,CACHC,GAAIN,EAAKC,YAAYM,KACrBC,IAAG,GAKH,YAACjB,EAAY,KAAES,EAAKC,YAAYN,MAAK,KACrC,uBACE,YAACN,EAAW,KAAEW,EAAKC,YAAYQ,MAC/B,YAACjB,EAAW,WAAKQ,EAAKU,OAAOC,YAAYC,OAE3C,qBAAIZ,EAAKa","file":"component---src-pages-blog-js-172701f9fb00142c1a15.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { css } from \"@emotion/core\"\nimport styled from \"@emotion/styled\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst Content = styled.div`\n  margin: 0 auto;\n  max-width: 860px;\n  text-align: justify;\n  padding: 1.45rem 1.0875rem;\n`\n\nconst ArticleDate = styled.h5`\n  display: inline;\n  color: #606060;\n`\n\nconst WordBlog = styled.h1`\n  color: #677CE2;\n`\n\nconst MarkerHeader = styled.h3`\n  display: inline;\n  border-radius: 1em 0 1em 0;\n  color: #677CE2;\n\n  &:hover {\n  background-image: linear-gradient(\n    -100deg,\n    rgba(255, 250, 150, 0.15),\n    rgba(255, 250, 150, 0.8) 100%,\n    rgba(255, 250, 150, 0.25)\n  );\n}\n`\n\nconst ReadingTime = styled.h5`\n  display: inline;\n  color: #606060;\n`\n\nconst IndexPage = ({ data }) => {\n  return (\n    <Layout>\n      <SEO title=\"Blog\" />\n      <Content>\n        <WordBlog>Blog</WordBlog>\n        {data.allMarkdownRemark.edges\n          .filter(({ node }) => {\n            const rawDate = node.frontmatter.rawDate\n            const date = new Date(rawDate)\n            return date < new Date()\n          })\n          .map(({ node }) => (\n            <div key={node.id}>\n              <Link\n                to={node.frontmatter.path}\n                css={css`\n                  text-decoration: none;\n                  color: inherit;\n                `}\n              >\n                <MarkerHeader>{node.frontmatter.title} </MarkerHeader>\n                <div>\n                  <ArticleDate>{node.frontmatter.date}</ArticleDate>\n                  <ReadingTime> - {node.fields.readingTime.text}</ReadingTime>\n                </div>\n                <p>{node.excerpt}</p>\n              </Link>\n            </div>\n          ))}\n      </Content>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { draft: { eq: false } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            rawDate: date\n            path\n          }\n          fields {\n            slug\n            readingTime {\n              text\n            }\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}